CREATE DOMAIN RIF VARCHAR(11) CONSTRAINT valid_rif CHECK (VALUE ~ '^(V|J|G)-[0-9]{9}$');

CREATE DOMAIN CI VARCHAR(10) CONSTRAINT valid_cedula CHECK (VALUE ~ '^(V|E)-[0-9]{7,8}$');

CREATE DOMAIN ESTADOS VARCHAR(15) CONSTRAINT set_estados CHECK (
	VALUE IN ('esperando', 'procesando', 'enviado', 'entregado', 'cancelado')
);

CREATE DOMAIN TIPO VARCHAR(15) CONSTRAINT set_tipo_empleado CHECK (
	VALUE IN ('comun', 'encargado', 'admin')
);

CREATE DOMAIN TIPOIVA VARCHAR(15) CONSTRAINT set_tipo_iva CHECK (
	VALUE IN ('efectivo', 'transferencia')
);

CREATE TABLE local (
	rif RIF PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL UNIQUE,
	correo VARCHAR(60) NOT NULL UNIQUE,
	direccion VARCHAR(100),
	imagen VARCHAR(30)
);

CREATE TABLE usuario (
	cedula CI PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL,
	apellido VARCHAR(60) NOT NULL,
	direccion VARCHAR(100) NOT NULL,
	correo VARCHAR(60) NOT NULL UNIQUE,
	contrasena VARCHAR(60) NOT NULL,
	avatar VARCHAR(30)
);

CREATE TABLE empleado (
	cedula CI PRIMARY KEY,
	tipo TIPO NOT NULL,
	riflocal RIF NOT NULL,
	CONSTRAINT FK_EMPLEADO_LOCAL FOREIGN KEY (riflocal) REFERENCES local(rif) 
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE cliente (
	cedula CI PRIMARY KEY,
	telefono VARCHAR(20) NOT NULL
);

CREATE TABLE direccion_envio (
	cedulacliente CI PRIMARY KEY,
	direccion VARCHAR(100) NOT NULL,
	CONSTRAINT FK_DIRENVIO_CLIENTE FOREIGN KEY (cedulacliente) REFERENCES cliente(cedula) 
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE tipo_iva (
	id SERIAL PRIMARY KEY,
	tipo TIPOIVA NOT NULL,
	porcentaje FLOAT NOT NULL,
	activo BOOLEAN NOT NULL
);

CREATE TABLE pedido (
	codigo SERIAL PRIMARY KEY,
	estado ESTADOS NOT NULL,
	fecha DATE DEFAULT NOW(),
	cedulacliente CI NULL,
	idtipoiva INT NULL,
	total FLOAT NOT NULL,
	CONSTRAINT FK_PEDIDO_CLIENTE FOREIGN KEY (cedulacliente) REFERENCES cliente(cedula) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_PEDIDO_TIPOIVA FOREIGN KEY (idtipoiva) REFERENCES tipo_iva(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE empleadoPedido (
	cedulaempleado CI NULL,
	codigopedido INT NOT NULL,
	CONSTRAINT PK_EMPLEADOPEDIDO PRIMARY KEY (cedulaempleado,codigopedido),
	CONSTRAINT FK_EMPLEADOPEDIDO_EMPLEADO FOREIGN KEY (cedulaempleado) REFERENCES empleado(cedula) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_EMPLEADOPEDIDO_PEDIDO FOREIGN KEY (codigopedido) REFERENCES pedido(codigo) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE cuenta_bancaria (
	numero_de_cuenta INT PRIMARY KEY,
	banco VARCHAR(60) NOT NULL,
	riflocal RIF NOT NULL,
	CONSTRAINT FK_CUENTA_BANCARIA_LOCAL FOREIGN KEY (riflocal) REFERENCES local(rif) 
	ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE menu (
	id SERIAL PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL UNIQUE
);

CREATE TABLE localMenu (
	riflocal RIF NOT NULL,
	idmenu INT NOT NULL,
	activo BOOLEAN NOT NULL,
	CONSTRAINT PK_LOCALMENU PRIMARY KEY (riflocal,idmenu),
	CONSTRAINT FK_LOCALMENU_LOCAL FOREIGN KEY (riflocal) REFERENCES local(rif) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_LOCALMENU_MENU FOREIGN KEY (idmenu) REFERENCES menu(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE plato (
	id SERIAL PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL UNIQUE,
	descripcion VARCHAR(300) NOT NULL,
	precio FLOAT NOT NULL,
	tiempo_estimado TIME NOT NULL,
	imagen VARCHAR(30)
);

CREATE TABLE menuPlato (
	idmenu INT NOT NULL,
	idplato INT NOT NULL,
	CONSTRAINT PK_MENUPLATO PRIMARY KEY (idmenu,idplato),
	CONSTRAINT FK_MENUPLATO_MENU FOREIGN KEY (idmenu) REFERENCES menu(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_MENUPLATO_PLATO FOREIGN KEY (idplato) REFERENCES plato(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE extra (
	id SERIAL PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL,
	precio FLOAT NOT NULL
);

CREATE TABLE extraPedido (
	idextra INT NULL,
	codigopedido INT NOT NULL,
	precio_unitario FLOAT NOT NULL,
	cantidad INT NOT NULL,
	CONSTRAINT PK_EXTRAPEDIDO PRIMARY KEY (idextra,codigopedido),
	CONSTRAINT FK_EXTRAPEDIDO_EXTRA FOREIGN KEY (idextra) REFERENCES extra(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_EXTRAPEDIDO_PEDIDO FOREIGN KEY (codigopedido) REFERENCES pedido(codigo) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE extraMenu (
	idextra INT NOT NULL,
	idmenu INT NOT NULL,
	CONSTRAINT PK_EXTRAMENU PRIMARY KEY (idextra,idmenu),
	CONSTRAINT FK_EXTRAMENU_EXTRA FOREIGN KEY (idextra) REFERENCES extra(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_EXTRAMENU_MENU FOREIGN KEY (idmenu) REFERENCES menu(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE pedidoPlato (
	codigopedido INT NOT NULL,
	idplato INT NULL,
	precio_unitario FLOAT NOT NULL,
	cantidad INT NOT NULL,
	CONSTRAINT PK_PEDIDOPLATO PRIMARY KEY (codigopedido,idplato),
	CONSTRAINT FK_PEDIDOPLATO_PEDIDO FOREIGN KEY (codigopedido) REFERENCES pedido(codigo) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_PEDIDOPLATO_PLATO FOREIGN KEY (idplato) REFERENCES plato(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE bebida (
	id SERIAL PRIMARY KEY,
	nombre VARCHAR(60) NOT NULL,
	precio FLOAT NOT NULL
);

CREATE TABLE bebidaPedido (
	idbebida INT NULL,
	codigopedido INT NOT NULL,
	precio_unitario FLOAT NOT NULL,
	cantidad INT NOT NULL,
	CONSTRAINT PK_BEBIDAPEDIDO PRIMARY KEY (idbebida,codigopedido),
	CONSTRAINT FK_BEBIDAPEDIDO_BEBIDA FOREIGN KEY (idbebida) REFERENCES bebida(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_BEBIDAPEDIDO_PEDIDO FOREIGN KEY (codigopedido) REFERENCES pedido(codigo) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE bebidaMenu (
	idbebida INT NOT NULL,
	idmenu INT NOT NULL,
	CONSTRAINT PK_BEBIDAMENU PRIMARY KEY (idbebida,idmenu),
	CONSTRAINT FK_BEBIDAMENU_BEBIDA FOREIGN KEY (idbebida) REFERENCES bebida(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FK_BEBIDAMENU_MENU FOREIGN KEY (idmenu) REFERENCES menu(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE clientePedidoTransferencia (
	cedulacliente CI NULL,
	codigopedido INT NOT NULL,
	codigo_confirmacion INT NOT NULL,
	CONSTRAINT PK_CLIENTEPEDIDOTRANS PRIMARY KEY (cedulacliente,codigopedido),
	CONSTRAINT FK_CLIENTEPEDIDOTRANS_CLIENTE FOREIGN KEY (cedulacliente) REFERENCES cliente(cedula) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT FK_CLIENTEPEDIDOTRANS_PEDIDO FOREIGN KEY (codigopedido) REFERENCES pedido(codigo) ON DELETE CASCADE ON UPDATE CASCADE
);